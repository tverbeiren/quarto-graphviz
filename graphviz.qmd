---
title: Graphviz rendering issue
resources:
  - comp.png
format:
  html:
    toc: true
    embed-resources: true
  gfm: default
engine: knitr
---

Graphviz supports multiple ways to include a `.png` file, either as a node background or in an HTML label.

## `image=...` attribute for nodes


### Render using Quarto

The `image=...` argument does not function in Quarto, the SVG is generated without any reference to the image itself.

```{dot}
digraph back {
  rankdir="LR"
  node [ shape=none, fontsize="20", fontname="Helvetica", fontcolor="white", image="comp.png" ]

  A -> B -> {C,D} -> E -> G

}
```

When inspecting the generated SVG code, the image appears nowhere.

### Render Using `dot`

Using `dot` on the CLI, it does render properly to SVG:

```{sh}
#| echo: true
#| output: asis
#| eval: true

dot -Tsvg > /tmp/graph.svg <<HERE
digraph back {
  size=9
  rankdir="LR"
  node [ shape=none, fontsize="20", fontname="Helvetica", fontcolor="white", image="comp.png" ]

  A -> B -> {C,D} -> E -> G

}
HERE

cat /tmp/graph.svg | grep -v "DOCTYPE" | grep -v "svg11.dtd"
```

`dot` generates this code:

```{sh}
#| echo: false
#| output: true
#| eval: true

dot -Tsvg > /tmp/graph.svg <<HERE
digraph back {
  rankdir="LR"
  node [ shape=none, fontsize="20", fontname="Helvetica", fontcolor="white", image="comp.png" ]

  A -> B -> {C,D} -> E -> G

}
HERE

cat /tmp/graph.svg | grep -v "DOCTYPE" | grep -v "svg11.dtd"
```

## HTML labels

### Render using Quarto

```{dot}
digraph {
    ratio="fill";
    size="3,3!";
    margin="1,1";

    node [shape=plain];
    root [label=<<TABLE border="1"><TR><TD><IMG SRC="comp.png"/></TD></TR>
                                   <TR><TD>text under</TD></TR></TABLE>>];
}
```

### Render using `dot`


```{sh}
#| echo: true
#| output: asis
#| eval: true

dot -Tsvg > /tmp/graph.dot <<HERE
digraph {
    ratio="fill";
    size="3,3!";
    margin="1,1";

    node [shape=plain];
    root [label=<<TABLE border="1"><TR><TD><IMG SRC="comp.png"/></TD></TR>
                                   <TR><TD>text under</TD></TR></TABLE>>];
}
HERE

cat /tmp/graph.dot | grep -v "DOCTYPE" | grep -v "svg11.dtd"
```

`dot` generates this SVG code:

```{sh}
#| echo: false
#| output: true
#| eval: true

dot -Tsvg > /tmp/graph.dot <<HERE
digraph {
    ratio="fill";
    size="3,3!";
    margin="2,2";

    node [shape=plain];
    root [label=<<TABLE border="1"><TR><TD><IMG SRC="comp.png"/></TD></TR>
                                   <TR><TD>text under</TD></TR></TABLE>>];
}
HERE

cat /tmp/graph.dot | grep -v "DOCTYPE" | grep -v "svg11.dtd"
```
